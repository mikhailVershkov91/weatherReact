[{"/Users/vershkov_mikhail/Desktop/React/weather/src/index.js":"1","/Users/vershkov_mikhail/Desktop/React/weather/src/App.js":"2","/Users/vershkov_mikhail/Desktop/React/weather/src/reportWebVitals.js":"3","/Users/vershkov_mikhail/Desktop/React/weather/src/components/Welcome/Welcome.jsx":"4","/Users/vershkov_mikhail/Desktop/React/weather/src/components/Helmet.jsx":"5","/Users/vershkov_mikhail/Desktop/React/weather/src/components/MainPage/MainPage.jsx":"6","/Users/vershkov_mikhail/Desktop/React/weather/src/js/parallax.js":"7","/Users/vershkov_mikhail/Desktop/React/weather/src/store/weatherReducer.js":"8","/Users/vershkov_mikhail/Desktop/React/weather/src/plugins/axios.js":"9","/Users/vershkov_mikhail/Desktop/React/weather/src/store/store.js":"10","/Users/vershkov_mikhail/Desktop/React/weather/src/components/Autocomplete/Autocomplete.jsx":"11","/Users/vershkov_mikhail/Desktop/React/weather/src/store/autocompleteReducer.js":"12","/Users/vershkov_mikhail/Desktop/React/weather/src/components/preloader/Preloader.jsx":"13","/Users/vershkov_mikhail/Desktop/React/weather/src/components/WeatherInfo/WeatherInfo.jsx":"14"},{"size":495,"mtime":1611160268155,"results":"15","hashOfConfig":"16"},{"size":504,"mtime":1612185663868,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1610553447699,"results":"18","hashOfConfig":"16"},{"size":952,"mtime":1612186791783,"results":"19","hashOfConfig":"16"},{"size":280,"mtime":1610710674090,"results":"20","hashOfConfig":"16"},{"size":1679,"mtime":1611916073311,"results":"21","hashOfConfig":"16"},{"size":1822,"mtime":1612185744409,"results":"22","hashOfConfig":"16"},{"size":1017,"mtime":1612185680525,"results":"23","hashOfConfig":"16"},{"size":330,"mtime":1611159309730,"results":"24","hashOfConfig":"16"},{"size":436,"mtime":1611243314081,"results":"25","hashOfConfig":"16"},{"size":1709,"mtime":1611246635700,"results":"26","hashOfConfig":"16"},{"size":1766,"mtime":1611243191459,"results":"27","hashOfConfig":"16"},{"size":364,"mtime":1611781529512,"results":"28","hashOfConfig":"16"},{"size":2256,"mtime":1612174807070,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"oegiex",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/Users/vershkov_mikhail/Desktop/React/weather/src/index.js",[],["64","65"],"/Users/vershkov_mikhail/Desktop/React/weather/src/App.js",[],"/Users/vershkov_mikhail/Desktop/React/weather/src/reportWebVitals.js",[],"/Users/vershkov_mikhail/Desktop/React/weather/src/components/Welcome/Welcome.jsx",["66"],"/Users/vershkov_mikhail/Desktop/React/weather/src/components/Helmet.jsx",[],["67","68"],"/Users/vershkov_mikhail/Desktop/React/weather/src/components/MainPage/MainPage.jsx",[],"/Users/vershkov_mikhail/Desktop/React/weather/src/js/parallax.js",["69"],"const scene = document.getElementById(\"weather\");\nconsole.log(\"Im here\");\nconst layers = scene.children;\nconst depth = [0.2, 0.4, 0.6, 0.6, 0.8, 1];\n\nlet windowWidth = null;\nlet windowHeight = null;\nlet windowCenterX = null;\nlet windowCenterY = null;\n\nlet inputX = 0;\nlet inputY = 0;\n\nlet scrollY = window.scrollY;\nlet offsetX = 0;\nlet offsetY = 0;\n\nupdateDimensions();\nstartAnimation();\n\nfunction updateDimensions() {\n\twindowWidth = window.innerWidth;\n\twindowHeight = window.innerHeight;\n\twindowCenterX = windowWidth / 2;\n\twindowCenterY = windowHeight / 2;\n}\n\nfunction startAnimation() {\n\twindow.addEventListener(\"resize\", updateDimensions);\n\tscene.addEventListener(\"mousemove\", onMouseMove);\n\twindow.addEventListener(\"scroll\", onScroll);\n\twindow.requestAnimationFrame(onAnimationFrame);\n}\n\nfunction onMouseMove(event) {\n\tconst clientX = event.clientX;\n\tconst clientY = event.clientY;\n\n\tif (windowCenterX && windowCenterY) {\n\t\tinputX = (clientX - windowCenterX) / windowCenterX;\n\t\tinputY = (clientY - windowCenterY) / windowCenterY;\n\t}\n}\n\nfunction onScroll(event) {\n\tinputY = (window.scrollY / windowCenterY) * 1.5;\n}\n\nfunction onAnimationFrame() {\n\tconst positionX = (inputX * windowWidth) / 10;\n\tconst positionY =\n\t\t(inputY * windowHeight) / 10 + (window.scrollY / windowCenterY) * 1.5;\n\n\toffsetX += (positionX - offsetX) * 0.1;\n\toffsetY += (positionY - offsetY) * 0.1;\n\n\tfor (let index = 0; index < layers.length; index++) {\n\t\tconst layer = layers[index];\n\t\tconst layerDepth = depth[index] || 0.2;\n\t\tconst xOffset = offsetX * layerDepth * -1;\n\t\tconst yOffset = offsetY * layerDepth * -1;\n\n\t\tsetPosition(layer, xOffset, yOffset);\n\t}\n\n\twindow.requestAnimationFrame(onAnimationFrame);\n}\n\nfunction setPosition(element, x, y) {\n\telement.style.transform =\n\t\t\"translate3d(\" + x.toFixed(1) + \"px,\" + y.toFixed(1) + \"px,0)\";\n}\n","/Users/vershkov_mikhail/Desktop/React/weather/src/store/weatherReducer.js",[],"/Users/vershkov_mikhail/Desktop/React/weather/src/plugins/axios.js",[],"/Users/vershkov_mikhail/Desktop/React/weather/src/store/store.js",[],"/Users/vershkov_mikhail/Desktop/React/weather/src/components/Autocomplete/Autocomplete.jsx",["70"],"import React, { useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport s from \"./Autocomplete.module.css\";\nimport { connect } from \"react-redux\";\nimport { getWeather } from \"../../store/weatherReducer\";\n\nconst AutocompleteComponent = (props) => {\n\tconst cities = [\n\t\t\"London\",\n\t\t\"Los-Angeles\",\n\t\t\"Liverpool\",\n\t\t\"Amsterdam\",\n\t\t\"Kaliningrad\",\n\t\t\"Shymkent\",\n\t\t\"Moscow\",\n\t];\n\n\tconst [value, setValue] = useState(cities[0]);\n\n\tconst onValueSelect = (value) => {\n\t\tconsole.log(value);\n\t\tprops.getWeather(value);\n\t};\n\n\treturn (\n\t\t<Autocomplete\n\t\t\tclassName={s.inputField}\n\t\t\tid=\"city-select\"\n\t\t\toptions={cities}\n\t\t\tonChange={(value) => {\n\t\t\t\tsetValue(value);\n\t\t\t\t// props.getWeather(value);\n\t\t\t\tonValueSelect(value);\n\t\t\t}}\n\t\t\t// autoHighlight\n\t\t\t// getOptionLabel={(option) => option.label}\n\t\t\t// renderOption={(option) => <React.Fragment>{option.label}</React.Fragment>}\n\t\t\trenderInput={(params) => (\n\t\t\t\t<TextField\n\t\t\t\t\t{...params}\n\t\t\t\t\tlabel=\"Choose a city\"\n\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t// inputProps={{\n\t\t\t\t\t// \t...params.inputProps,\n\t\t\t\t\t// }}\n\t\t\t\t\t// ref={inputCity}\n\t\t\t\t/>\n\t\t\t)}\n\t\t/>\n\t);\n};\n\n// const cities = [\n// \t{ label: \"London\" },\n// \t{ label: \"Los-Angeles\" },\n// \t{ label: \"Liverpool\" },\n// \t{ label: \"Amsterdam\" },\n// \t{ label: \"Kaliningrad\" },\n// \t{ label: \"Shymkent\" },\n// \t{ label: \"Moscow\" },\n// ];\n\nconst mapStateToProps = (state) => ({\n\t// textFieldValue: state.autocomplete.textFieldValue,\n\tweatherData: state.autocomplete.weatherData,\n});\n\nlet AutocompleteContainer = connect(mapStateToProps, {\n\tgetWeather,\n\t// updateInput,\n\t// setValue,\n})(AutocompleteComponent);\n\nexport default AutocompleteContainer;\n",["71","72"],"/Users/vershkov_mikhail/Desktop/React/weather/src/store/autocompleteReducer.js",[],"/Users/vershkov_mikhail/Desktop/React/weather/src/components/preloader/Preloader.jsx",[],["73","74"],"/Users/vershkov_mikhail/Desktop/React/weather/src/components/WeatherInfo/WeatherInfo.jsx",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":1,"column":17,"nodeType":"81","messageId":"82","endLine":1,"endColumn":26},{"ruleId":"75","replacedBy":"83"},{"ruleId":"77","replacedBy":"84"},{"ruleId":"79","severity":1,"message":"85","line":14,"column":5,"nodeType":"81","messageId":"82","endLine":14,"endColumn":12},{"ruleId":"79","severity":1,"message":"86","line":19,"column":9,"nodeType":"81","messageId":"82","endLine":19,"endColumn":14},{"ruleId":"75","replacedBy":"87"},{"ruleId":"77","replacedBy":"88"},{"ruleId":"75","replacedBy":"89"},{"ruleId":"77","replacedBy":"90"},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar",["91"],["92"],"'scrollY' is assigned a value but never used.","'value' is assigned a value but never used.",["91"],["92"],["91"],["92"],"no-global-assign","no-unsafe-negation"]